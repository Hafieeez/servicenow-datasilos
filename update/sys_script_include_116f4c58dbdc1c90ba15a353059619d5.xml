<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_datasilos.RecordInitialize</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>RecordInitialize</name>
        <script><![CDATA[function RecordInitialize(strTable, record)
{
	var Debug = x_snc_devtools.Debug;
	var RenderValue = x_snc_devtools.RenderValue;
	var ArrayUnique = x_snc_devtools.ArrayUnique;
	var GetStringValue = x_snc_devtools.GetStringValue;
	
	Debug('DataSilos: RecordInitialize: '+strTable+' '+RenderValue(record));

	strTable = GetStringValue(strTable);
	if (strTable == '')
	{
		gs.info('DataSilos: RecordInitialize: table not specified');
		return false;
	}
	if (record == undefined)
	{
		gs.info('DataSilos: RecordInitialize: record is undefined');
		return false;
	}
	
	
	if (IsTableMainRecord(strTable))
	{
		
		// Identify the user who created the record
		var strOpenedByUserSysId = record.opened_by;
		var grUser = new GlideRecord('sys_user');
		if (grUser.get(strOpenedByUserSysId) == null)
		{
			Debug('DataSilos: RecordInitialize: opened_by user NOT found');
			return false;
		}

		Debug('DataSilos: RecordInitialize: opened_by user found: '+strOpenedByUserSysId+' ');

		var aUserSilos = GetSilosFromUser(strOpenedByUserSysId);
		
		Debug('DataSilos: RecordInitialize: GetSilosFromUser: '+RenderValue(aUserSilos));

		// Now add all groups of all silos
		var aGroupsToAdd = [];
		if (aUserSilos.length > 0)
		{
			var grSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
			var query = grSilosToGroups.addQuery('datasilo','=',aUserSilos[0]);
			for (var nIndexSilo = 1; nIndexSilo < aUserSilos.length; nIndexSilo++) 
			{
				query.addOrCondition('datasilo','=',aUserSilos[nIndexSilo]);
			}
			grSilosToGroups.query();
			while (grSilosToGroups.next())
			{
				aGroupsToAdd.push(grSilosToGroups.getValue('group'));
			}
		}
		Debug('DataSilos: RecordInitialize: aGroupsToAdd: '+RenderValue(aGroupsToAdd));

		// Apply the silo's groups to the record's white list
		for (var nIndexGroup = 0; nIndexGroup < aGroupsToAdd.length; nIndexGroup++)
		{
			RecordAddGroupToWhiteList(record,aGroupsToAdd[nIndexGroup]);
		}
		
		// Add the current assignment group
		var strAssignmentGroup = GetStringValue(record.getValue('assignment_group'));
		if (strAssignmentGroup != '')
		{
			RecordAddGroupToWhiteList(record,strAssignmentGroup);
		}
		
		return true;
	}
	
	if (IsTableRelatedRecord(strTable))
	{
		grParent = GetParentRecord(record);
		if (grParent != false)
		{
			var strWhiteListGroupSysIds = grParent.getValue('x_snc_datasilos_group_whitelist');
			var aWhiteListGroups = strWhiteListGroupSysIds.split(',');
			aWhiteListGroups.forEach( function(strWhiteListGroupSysId)
			{
				RecordAddGroupToWhiteList(record,strWhiteListGroupSysId);
			});
		}
		return true;
	}
	return false;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-16 13:23:17</sys_created_on>
        <sys_id>116f4c58dbdc1c90ba15a353059619d5</sys_id>
        <sys_mod_count>42</sys_mod_count>
        <sys_name>RecordInitialize</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_116f4c58dbdc1c90ba15a353059619d5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-04-29 08:28:50</sys_updated_on>
    </sys_script_include>
</record_update>
