<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_datasilos.InitializeRecord</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>InitializeRecord</name>
        <script><![CDATA[function InitializeRecord(strTable, record)
{
	var Debug = x_snc_devtools.Debug;
	var RenderValue = x_snc_devtools.RenderValue;
	var ArrayUnique = x_snc_devtools.ArrayUnique;
	var GetStringValue = x_snc_devtools.GetStringValue;
	
	Debug('DataSilos: InitializeRecord: '+strTable+' '+RenderValue(record));

	strTable = GetStringValue(strTable);
	if (strTable == '')
	{
		gs.info('DataSilos: InitializeRecord: table not specified');
		return false;
	}
	if (record == undefined)
	{
		gs.info('DataSilos: InitializeRecord: record is undefined');
		return false;
	}
	
	// Identify the user who created the record
	var strOpenedByUserSysId = record.opened_by;
	var grUser = new GlideRecord('sys_user');
	if (grUser.get(strOpenedByUserSysId) == null)
	{
		Debug('DataSilos: InitializeRecord: opened_by user NOT found');
		return false;
	}
	
	Debug('DataSilos: InitializeRecord: opened_by user found: '+strOpenedByUserSysId+' ');
	
	
//	var aUserGroups = GetGroupsFromUser(strOpenedByUserSysId);
//	Debug('DataSilos: InitializeRecord: aUserGroups: '+RenderValue(aUserGroups)+' ');


	var aUserSilos = GetSilosFromUser(strOpenedByUserSysId);
	Debug('DataSilos: InitializeRecord: GetSilosFromUser: '+RenderValue(aUserSilos));

	// Now add all groups of all silos
	var aGroupsToAdd = [];
	if (aUserSilos.length > 0)
	{
		var grSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
		var query = grSilosToGroups.addQuery('datasilo','=',aUserSilos[0]);
		for (var nIndexSilo = 1; nIndexSilo < aUserSilos.length; nIndexSilo++) 
		{
			query.addOrCondition('datasilo','=',aUserSilos[nIndexSilo]);
		}
		grSilosToGroups.query();
		while (grSilosToGroups.next())
		{
			aGroupsToAdd.push(grSilosToGroups.getValue('group'));
		}
	}
	Debug('DataSilos: InitializeRecord: aGroupsToAdd: '+RenderValue(aGroupsToAdd));
	
	// Apply the silo's groups to the record's white list
	for (var nIndexGroup = 0; nIndexGroup < aGroupsToAdd.length; nIndexGroup++)
	{
		RecordAddGroupToWhiteList(record,aGroupsToAdd[nIndexGroup]);
	}
	return true;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-16 13:23:17</sys_created_on>
        <sys_id>116f4c58dbdc1c90ba15a353059619d5</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>InitializeRecord</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_116f4c58dbdc1c90ba15a353059619d5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-04-24 14:26:27</sys_updated_on>
    </sys_script_include>
</record_update>
