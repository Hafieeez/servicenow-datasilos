<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.CreateTestData</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>CreateTestData</name>
        <script><![CDATA[function CreateTestData()
{
	var Debug = x_snc_devtools.Debug;
	var RenderValue = x_snc_devtools.RenderValue;
	
	var strPrefix = '_TEST_DATASILOS_';
	
	function CreateTestUser(strName, aRoles)
	{
		Debug('DataSilos: CreateTestUser '+strName+' '+RenderValue(aRoles));
		strName = ''+strName;
		if (Array.isArray(aRoles) == false)
		{
			aRoles = [];
		}
		var grUser = new GlideRecord('sys_user');
		var strUserSysId = null;
		var bDeleted = true;
		if (grUser.get('user_name',strPrefix+strName))
		{
			strUserSysId = grUser.getValue('sys_id');
			bDeleted = grUser.deleteRecord();
		}
		if (bDeleted == true || strUserSysId == null)
		{
			grUser.newRecord();
			grUser.user_name = strPrefix+strName;
			grUser.first_name = strPrefix+strName;
			strUserSysId = grUser.insert();
		}

		if (strUserSysId != null)
		{
			var grUserHasRole = new GlideRecord("sys_user_has_role");
			aRoles.forEach(function(strRole)
			{
				if (strRole != '')
				{
					var grUserRole = new GlideRecord('sys_user_role');
					grUserRole.addQuery('name','=',strRole);
					grUserRole.query();
					if (grUserRole.getRowCount() == 1)
					{
						if (grUserRole.next())
						{						
							grUserHasRole.initialize();
							grUserHasRole.role = grUserRole.sys_id;
							grUserHasRole.user = strUserSysId;
							grUserHasRole.insert();
						}
					}

				}
			});
		}
	}
	
	function CreateTestGroup(strName, aUserNames)
	{	
		Debug('DataSilos: CreateTestGroup: '+strName+' '+RenderValue(aUserNames));
		strName = ''+strName;
		if (Array.isArray(aUserNames) == false)
		{
			aUserNames = [];
		}
		var grGroup = new GlideRecord('sys_user_group');
		grGroup.addQuery('name','=',strPrefix+strName);
		grGroup.query();
		grGroup.deleteMultiple();

		var grGroup = new GlideRecord('sys_user_group');
		grGroup.newRecord();
		grGroup.name = strPrefix+strName;
		var strGroupSysId = grGroup.insert();
		Debug('DataSilos: CreateTestGroup grGroup.insert returned: '+strGroupSysId);

		if (strGroupSysId != null)
		{
			var grGroupMember = new GlideRecord('sys_user_grmember');
			aUserNames.forEach(function(strUserName)
			{
				if (strUserName != '')
				{
					var grUser = new GlideRecord("sys_user");
					if (grUser.get('user_name',strPrefix+strUserName))
					{						
						grGroupMember.initialize();
						grGroupMember.group = strGroupSysId;
						grGroupMember.user = grUser.sys_id;
						grGroupMember.insert();
					}

				}
			});
		}		
		

	}

	function CreateTestSilo(strName, aMemberGroupNames, aFulfillerGroupNames, aSupervisorGroupNames)
	{
		Debug('DataSilos: CreateTestSilo: '+strName+' '
			+RenderValue(aMemberGroupNames)+' '
			+RenderValue(aFulfillerGroupNames)+' '
			+RenderValue(aSupervisorGroupNames));	
		strName = ''+strName;
		if (Array.isArray(aFulfillerGroupNames) == false)
		{
			aFulfillerGroupNames = [];
		}
		if (Array.isArray(aSupervisorGroupNames) == false)
		{
			aSupervisorGroupNames = [];
		}
		var grDataSilo = new GlideRecord('x_snc_datasilos_datasilos');
		grDataSilo.addQuery('name','=',strPrefix+strName);
		grDataSilo.query();
		grDataSilo.deleteMultiple();

		var grDataSilo = new GlideRecord('x_snc_datasilos_datasilos');
		grDataSilo.newRecord();
		grDataSilo.name = strPrefix+strName;
		var strDataSiloSysId = grDataSilo.insert();
		Debug('DataSilos: CreateTestSilo grDataSilo.insert returned: '+strDataSiloSysId);
		if (strDataSiloSysId != null)
		{
			var grGroup = new GlideRecord('sys_user_group');
			var grDataSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
			aMemberGroupNames.forEach(function(strGroupName)
			{
				if (strGroupName != '')
				{
					if (grGroup.get('name',strPrefix+strGroupName))
					{
						grDataSilosToGroups.newRecord();
						grDataSilosToGroups.datasilo = strDataSiloSysId;
						grDataSilosToGroups.group = grGroup.sys_id;
						grDataSilosToGroups.type = 'member';
						grDataSilosToGroups.insert();
					}
				}
			});			
			aFulfillerGroupNames.forEach(function(strGroupName)
			{
				if (strGroupName != '')
				{
					if (grGroup.get('name',strPrefix+strGroupName))
					{
						grDataSilosToGroups.newRecord();
						grDataSilosToGroups.datasilo = strDataSiloSysId;
						grDataSilosToGroups.group = grGroup.sys_id;
						grDataSilosToGroups.type = 'fulfiller';
						grDataSilosToGroups.insert();
					}
				}
			});
			aSupervisorGroupNames.forEach(function(strGroupName)
			{
				if (strGroupName != '')
				{
					if (grGroup.get('name',strPrefix+strGroupName))
					{
						grDataSilosToGroups.newRecord();
						grDataSilosToGroups.datasilo = strDataSiloSysId;
						grDataSilosToGroups.group = grGroup.sys_id;
						grDataSilosToGroups.type = 'supervisor';
						grDataSilosToGroups.insert();
					}
				}
			});
		}
	}
	
	function CreateTestIncident(strName, strCallerUserName, strAssignmentGroupName)
	{
		Debug('DataSilos: CreateTestIncident: '+strName+' '+strCallerUserName+' '+strAssignmentGroupName);		
		
		strName = ''+strName;
		strCallerUserName = ''+strCallerUserName;
		strAssignmentGroupName = ''+strAssignmentGroupName;


		var grIncident = new GlideRecord('incident');
		grIncident.addQuery('short_description','=',strPrefix+strName);
		grIncident.query();
		grIncident.deleteMultiple();

		var strCallerUserSysId = '';
		if (strCallerUserName != '')
		{
			var grUser = new GlideRecord("sys_user");
			if (grUser.get('user_name',strPrefix+strCallerUserName))
			{
				strCallerUserSysId = grUser.sys_id;
			}
		}		
		
		var strAssignmentGroupSysId = '';
		if (strAssignmentGroupName != '')
		{
			var grGroup = new GlideRecord("sys_user_group");
			if (grGroup.get('name',strPrefix+strAssignmentGroupName))
			{
				strAssignmentGroupSysId = grGroup.sys_id;
			}
		}
		
		var grIncident = new GlideRecord('incident');
		grIncident.newRecord();
		grIncident.short_description = strPrefix+strName;
		grIncident.caller_id = strCallerUserSysId;
		grIncident.assignment_group = strAssignmentGroupSysId;
		var strIncidentSysId = grIncident.insert();
		Debug('DataSilos: CreateTestIncident grIncident.insert returned: '+strIncidentSysId);		
	}

	function CreateTestChange(strName, strUserName, strAssignmentGroupName)
	{
		Debug('DataSilos: CreateTestChange: '+strName+' '+strUserName+' '+strAssignmentGroupName);
	}	
	
	
	// Users
	CreateTestUser('ALICE',['itil']);
	CreateTestUser('AMBER',['itil']);
	CreateTestUser('ALBERT',['itil']);
	
	CreateTestUser('BOB',['itil']);
	CreateTestUser('BELINDA',['itil']);
	CreateTestUser('BRODY',['itil']);
	
	CreateTestUser('GEMMA',['itil']);
	CreateTestUser('GERRY',['itil']);
	CreateTestUser('GANDALF',['itil']);
	
	CreateTestUser('CALLER',null);

	// Groups
	CreateTestGroup('TEAM_ALPHA_MEMBER',['ALICE']);
	CreateTestGroup('TEAM_ALPHA_FULFILLER',['AMBER']);
	CreateTestGroup('TEAM_ALPHA_SUPERVISOR',['ALBERT']);

	CreateTestGroup('TEAM_BETA_MEMBER',['BOB']);
	CreateTestGroup('TEAM_BETA_FULFILLER',['BELINDA']);
	CreateTestGroup('TEAM_BETA_SUPERVISOR',['BRODY']);
	
	CreateTestGroup('TEAM_GAMMA_MEMBER',['GEMMA']);
	CreateTestGroup('TEAM_GAMMA_FULFILLER',['GERRY']);
	CreateTestGroup('TEAM_GAMMA_SUPERVISOR',['GANDALF']);
	
	// Silos
	CreateTestSilo('SILO_ALPHA',['TEAM_ALPHA_MEMBER'],['TEAM_ALPHA_FULFILLER'],['TEAM_ALPHA_SUPERVISOR']);
	CreateTestSilo('SILO_BETA',['TEAM_BETA_MEMBER'],['TEAM_BETA_FULFILLER'],['TEAM_BETA_SUPERVISOR']);
	CreateTestSilo('SILO_GAMMA',['TEAM_GAMMA_MEMBER'],['TEAM_GAMMA_FULFILLER'],['TEAM_GAMMA_SUPERVISOR']);
	
	// Incidents
	CreateTestIncident('A','CALLER','TEAM_ALPHA_MEMBER');
	CreateTestIncident('B','CALLER','TEAM_BETA_MEMBER');
	CreateTestIncident('C','CALLER','TEAM_GAMMA_MEMBER');



	
	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-04-14 15:19:33</sys_created_on>
        <sys_id>7807daef1b8cd490a89720a8ec4bcbc0</sys_id>
        <sys_mod_count>59</sys_mod_count>
        <sys_name>CreateTestData</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_7807daef1b8cd490a89720a8ec4bcbc0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-12 14:20:54</sys_updated_on>
    </sys_script_include>
</record_update>
