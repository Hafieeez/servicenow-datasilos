<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.DataSilosTestDataAPI</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>DataSilosTestDataAPI</name>
        <script><![CDATA[var DataSilosTestDataAPI = Class.create();
DataSilosTestDataAPI.prototype = Object.extendsObject(x_snc_devtools.TestDataAPI,
{
	CreateSilo:function(strName, aMemberGroupNames, aFulfillerGroupNames, aSupervisorGroupNames)
	{
		var Debug = x_snc_devtools.Debug;
		var RenderValue = x_snc_devtools.RenderValue;
		var strPrefix = this.GetPrefix();
		Debug('DataSilos: CreateTestSilo: '+strName+' '
			+RenderValue(aMemberGroupNames)+' '
			+RenderValue(aFulfillerGroupNames)+' '
			+RenderValue(aSupervisorGroupNames));	
		strName = ''+strName;
		if (Array.isArray(aMemberGroupNames) == false)
		{
			aMemberGroupNames = [];
		}
		if (Array.isArray(aFulfillerGroupNames) == false)
		{
			aFulfillerGroupNames = [];
		}
		if (Array.isArray(aSupervisorGroupNames) == false)
		{
			aSupervisorGroupNames = [];
		}
		var grDataSiloToDelete = new GlideRecord('x_snc_datasilos_datasilos');
		grDataSiloToDelete.addQuery('name','=',strPrefix+strName);
		grDataSiloToDelete.query();
		grDataSiloToDelete.deleteMultiple();

		var grDataSilo = new GlideRecord('x_snc_datasilos_datasilos');
		grDataSilo.newRecord();
		grDataSilo.name = strPrefix+strName;
		var strDataSiloSysId = grDataSilo.insert();
		Debug('DataSilos: CreateTestSilo grDataSilo.insert returned: '+strDataSiloSysId);
		if (strDataSiloSysId != null)
		{
			var grGroup = new GlideRecord('sys_user_group');
			var grDataSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
			aMemberGroupNames.forEach(function(strGroupName)
			{
				if (strGroupName != '')
				{
					if (grGroup.get('name',strPrefix+strGroupName))
					{
						grDataSilosToGroups.newRecord();
						grDataSilosToGroups.datasilo = strDataSiloSysId;
						grDataSilosToGroups.group = grGroup.sys_id;
						grDataSilosToGroups.type = 'member';
						grDataSilosToGroups.insert();
					}
				}
			});			
			aFulfillerGroupNames.forEach(function(strGroupName)
			{
				if (strGroupName != '')
				{
					if (grGroup.get('name',strPrefix+strGroupName))
					{
						grDataSilosToGroups.newRecord();
						grDataSilosToGroups.datasilo = strDataSiloSysId;
						grDataSilosToGroups.group = grGroup.sys_id;
						grDataSilosToGroups.type = 'fulfiller';
						grDataSilosToGroups.insert();
					}
				}
			});
			aSupervisorGroupNames.forEach(function(strGroupName)
			{
				if (strGroupName != '')
				{
					if (grGroup.get('name',strPrefix+strGroupName))
					{
						grDataSilosToGroups.newRecord();
						grDataSilosToGroups.datasilo = strDataSiloSysId;
						grDataSilosToGroups.group = grGroup.sys_id;
						grDataSilosToGroups.type = 'supervisor';
						grDataSilosToGroups.insert();
					}
				}
			});
		}
		return strDataSiloSysId;
	},

    type: 'DataSilosTestDataAPI'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-05-14 11:34:11</sys_created_on>
        <sys_id>5b9580191b781810a89720a8ec4bcbfc</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>DataSilosTestDataAPI</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_5b9580191b781810a89720a8ec4bcbfc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-05-15 14:58:08</sys_updated_on>
    </sys_script_include>
</record_update>
